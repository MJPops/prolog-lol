/*			Каток
Четыре подруги пришли на каток, каждая со своим братом. Они разбились на пары и 
начали кататься. Оказалось, что в каждой паре кавалер выше дамы и никто 
не катается со своей сестрой. Самый высокий из компании - Юра Воробьев, следующий
по росту Андрей Егоров, потом Люся Егорова, Сережа Петров, Оля Петрова, Дима Крымов
Инна Краымова и Аня Воробьева. Кто с кем катался?	*/

domains
	пара = пара(человек, человек)
	человек = человек(имя, пол, номаер_по_возрастанию_роста)
	имя = symbol
	пол = мужчина; женщина
	номаер_по_возрастанию_роста = integer
	
	люди = человек*
Predicates
	nondeterm один_из(человек, люди)
	nondeterm участвующие(люди)
	nondeterm родственники(имя, имя)
	nondeterm мужчина_выше(человек, человек)
	nondeterm являются_парой(пара)
%	nondeterm поиск_решения(имя)
Clauses
	один_из(Name,[Name|_]).
	один_из(Name,[_|Хвост]) :- один_из(Name,Хвост).

	участвующие(Люди) :- Люди = 
	[
		человек(аня, женщина, 1),
		человек(инна, женщина, 2),
		человек(дима, мужчина, 3),
		человек(оля, женщина, 4),
		человек(сережа, мужчина, 5),
		человек(люся, женщина, 6),
		человек(андрей, мужчина, 7),
		человек(юра, мужчина, 8)
	].
	
	
	
	родственники(аня, юра).
	родственники(инна, дима).
	родственники(оля, сережа).
	родственники(люся, андрей).
	родственники(юра, аня).
	родственники(дима, инна).
	родственники(сережа, оля).
	родственники(андрей, люся).
	
	мужчина_выше(человек(_, Пол1, Номер_по_росту_1), человек(_, Пол2, Номер_по_росту_2)) :- Пол1 = мужчина, Номер_по_росту_1 > Номер_по_росту_2, Пол2 = женщина.
	мужчина_выше(человек(_, Пол1, Номер_по_росту_1), человек(_, Пол2, Номер_по_росту_2)) :- Пол2 = мужчина, Номер_по_росту_1 < Номер_по_росту_2, Пол1 = женщина.
	
%Гипотеза
	являются_парой(пара(человек(Имя1, Пол1, Номер1), человек(Имя2, Пол2, Номер2))) :-
		not(родственники(Имя1, Имя2)), мужчина_выше(человек(_, Пол1, Номер1), человек(_, Пол2, Номер2)).
		
%Поиск решения
%	поиск_решения(человек(Имя, Пол, Номер)) :-
%		findall(
Goal
	являются_парой(пара(человек(аня, женщина, 1), человек(сережа, мужчина, 5))).