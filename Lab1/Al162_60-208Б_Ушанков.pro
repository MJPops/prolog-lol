/*				Каток
Четыре подруги пришли на каток, каждая со своим братом. Они разбились на пары и 
начали кататься. Оказалось, что в каждой паре юноша выше дамы и никто 
не катается со своей сестрой. Самый высокий из компании - Юра Воробьев, следующий
по росту Андрей Егоров, потом Люся Егорова, Сережа Петров, Оля Петрова, Дима Крымов 
Инна Краымова и Аня Воробьева. Кто с кем катался?	*/

DOMAINS
  	фамилия = symbol
  	имя_девушки = symbol
  	имя_юноши = symbol

% Разделены для распознования пола, таким образом отдельная проверка пола
% не потребуется
  	девушка = девушка(имя_девушки, фамилия)
  	юноша = юноша(имя_юноши, фамилия)

  	человек = девушка(имя_девушки, фамилия); юноша(имя_юноши, фамилия)
  	пара = пара(человек, человек)

% Итого: прикладной объект - "пара", которая представляет совокупность двух 
% объектов "человек", который в свою очередь может быть либо "юноша" либо "девушка"

  	фамилии = фамилия*
	люди = человек*

% Гипотеза представляет собой список возможных пар
  	гипотеза = пара*
PREDICATES
% Вспомогательные функции для работы со списками
  	nondeterm входит_в(пара, гипотеза)
  	nondeterm входит_в(фамилия, фамилии)
  	nondeterm входит_в(человек, люди)
  	nondeterm без_повторов(фамилии)
  	nondeterm без_повторов(люди)

  	nondeterm стоит_по_росту_после(человек, человек)
  	nondeterm ниже(человек, человек)
  	nondeterm есть_девушка_выше_юноша(гипотеза)

  	nondeterm генерация_гипотезы(гипотеза)
  	nondeterm проверка_гипотезы(гипотеза)
CLAUSES
	входит_в(Name, [Name|_]). 
	входит_в(Name, [_|Хвост]) :- 
		входит_в(Name, Хвост).
       
% Это правило говорит нам о том, что в пустом списке нет повтором
	без_повторов([]).
% Это правило отделяет первый элемент и проверяет, входит ли он в хвост.
% Если нет, то поиск продолжается рекурсивно для остальных элементов (Хвост)
% Если есть, то неудача
% Рекурсия прекратится, когда будет вызвано правило "без_повторов" для пустого списка
	без_повторов([Name|Хвост]) :-
		NOT(входит_в(Name, Хвост)),
		без_повторов(Хвост).

% Порядок по росту из условия задачи
	стоит_по_росту_после(юноша(андрей, егоровы), юноша(юра, воробьевы)).
	стоит_по_росту_после(девушка(люся, егоровы), юноша(андрей, егоровы)).
	стоит_по_росту_после(юноша(сережа, петровы), девушка(люся, егоровы)).
	стоит_по_росту_после(девушка(оля, петровы), юноша(сережа, петровы)).
	стоит_по_росту_после(юноша(дима, крымовы), девушка(оля, петровы)).
	стоит_по_росту_после(девушка(инна, крымовы), юноша(дима, крымовы)).
	стоит_по_росту_после(девушка(аня, воробьевы), девушка(инна, крымовы)).

% Сравение по росту при помощи рекурсии
% Также это можно реализовать серией сравнений через "ИЛИ",
% но это слишком громоздко
  	ниже(Ниже, Выше) :-
		стоит_по_росту_после(Ниже, Выше);
		стоит_по_росту_после(Середина, Выше),
		ниже(Ниже, Середина).

% Возвращает true, если в списке пар есть пара, где девушка выше юноши
  	есть_девушка_выше_юноша(Гипотеза):-
		входит_в(пара(девушка(ИмяДевушки, ФамилияДевушки), юноша(ИмяЮноша, ФамилияЮноша)), 
			Гипотеза), 
		ниже(юноша(ИмяЮноша, ФамилияЮноша), девушка(ИмяДевушки, ФамилияДевушки)).

% Генерация гипотезы
	генерация_гипотезы(Гипотеза):-

	% Фамилии записаны во множественном числе для того, чтобы по ним можно было находить родственников
		ВозможныеЮноши = 
			[юноша(юра, воробьевы), юноша(андрей, егоровы), юноша(сережа, петровы), юноша(дима, крымовы)],
		входит_в(ПараПетровой, ВозможныеЮноши), 
		входит_в(ПараКрымовой, ВозможныеЮноши), 
		входит_в(ПараВоробьевой, ВозможныеЮноши), 
		входит_в(ПараЕгоровой, ВозможныеЮноши), 
      
	% У каждой девушки пара должна быть уникальна
		без_повторов([ПараПетровой, ПараКрымовой, ПараВоробьевой, ПараЕгоровой]),
      
	% Юноша не является братом девушки
		NOT(ПараПетровой = юноша(_, петровы)),
		NOT(ПараКрымовой = юноша(_, крымовы)),
		NOT(ПараВоробьевой = юноша(_, воробьевы)),
		NOT(ПараЕгоровой = юноша(_, егоровы)),
      
		Гипотеза = 
		[
		% Все возможные пары для каждой девушки
			пара(девушка(оля, петровы),  ПараПетровой),
			пара(девушка(инна, крымовы),  ПараКрымовой),
			пара(девушка(аня, воробьевы),  ПараВоробьевой),
			пара(девушка(люся, егоровы),  ПараЕгоровой)
		].
    
% Проверка гипотезы
 	проверка_гипотезы(Гипотеза) :-
		генерация_гипотезы(Гипотеза)
   		NOT(есть_девушка_выше_юноша(Гипотеза)).
GOAL
  	проверка_гипотезы(Пары).