/*			Каток
Четыре подруги пришли на каток, каждая со своим братом. Они разбились на пары и 
начали кататься. Оказалось, что в каждой паре кавалер выше дамы и никто 
не катается со своей сестрой. Самый высокий из компании - Юра Воробьев, следующий
по росту Андрей Егоров, потом Люся Егорова, Сережа Петров, Оля Петрова, Дима Крымов
Инна Краымова и Аня Воробьева. Кто с кем катался?	*/

DOMAINS
  	фамилия = воробьевы; крымовы; петровы; егоровы
  	имя_дамы = оля; инна; аня; люся
  	имя_кавалера = андрей; юра; сережа; дима
  
  	структура_дамы = дама(имя_дамы, фамилия)
  	структура_кавалера = кавалер(имя_кавалера, фамилия)
  
  	человек = дама(имя_дамы, фамилия); кавалер(имя_кавалера, фамилия)
  
  	структура_гипотезы = пара(структура_дамы, структура_кавалера)
  
  	гипотеза = структура_гипотезы*
  	фамилии = фамилия*
  	дамы = структура_дамы*
  	кавалеры = структура_кавалера*
CONSTANTS
  	все_дамы = [дама(люся, егоровы), дама(оля, петровы), дама(инна, крымовы), дама(аня, воробьевы) ]
  	все_кавалеры = [кавалер(юра, воробьевы), кавалер(андрей, егоровы), кавалер(сережа, петровы), кавалер(дима, крымовы)]
PREDICATES
  	nondeterm входит_в(структура_гипотезы, гипотеза)
  	nondeterm входит_в(фамилия, фамилии)
  	nondeterm входит_в(структура_дамы, дамы)
  	nondeterm входит_в(структура_кавалера, кавалеры)
  
  	nondeterm без_повторов(фамилии)
  	nondeterm без_повторов(дамы) 
  	nondeterm без_повторов(кавалеры)
  
  	nondeterm генерация_гипотезы(гипотеза)
  	nondeterm факт_ниже(человек, человек)
  	nondeterm ниже(человек, человек)
  	nondeterm есть_дама_выше_кавалера(гипотеза)
  
  	nondeterm проверка_гипотезы(гипотеза)
CLAUSES
    	входит_в(ПервыйЭлемент, [ПервыйЭлемент|_ОстальныеЭлементы]). 
    	входит_в(ПервыйЭлемент, [_ПервыйЭлемент|ОстальныеЭлементы]):- 
       	входит_в(ПервыйЭлемент, ОстальныеЭлементы).
       
    	без_повторов([]).
    	без_повторов([Первый|Остальные]):-
      		NOT(входит_в(Первый, Остальные)),
      		без_повторов(Остальные).
  
    	генерация_гипотезы(Гипотеза):-
      		входит_в(ПараПетровой, все_кавалеры), 
      		входит_в(ПараКрымовой, все_кавалеры), 
      		входит_в(ПараВоробьевой, все_кавалеры), 
      		входит_в(ПараЕгоровой, все_кавалеры), 
      
      	без_повторов([ПараПетровой, ПараКрымовой, ПараВоробьевой, ПараЕгоровой]),
      
% никто не катается со своей сестрой. 
      	NOT(ПараПетровой = кавалер(_, петровы)),
      	NOT(ПараКрымовой = кавалер(_, крымовы)),
      	NOT(ПараВоробьевой = кавалер(_, воробьевы)),
      	NOT(ПараЕгоровой = кавалер(_, егоровы)),
      
      	Гипотеза = 
      	[
        	пара(дама(оля, петровы),  ПараПетровой),
        	пара(дама(инна, крымовы),  ПараКрымовой),
        	пара(дама(аня, воробьевы),  ПараВоробьевой),
        	пара(дама(люся, егоровы),  ПараЕгоровой)
       	].
    
    	факт_ниже(кавалер(андрей, егоровы), кавалер(юра, воробьевы)).
    	факт_ниже(дама(люся, егоровы), кавалер(андрей, егоровы)).
    	факт_ниже(кавалер(сережа, петровы), дама(люся, егоровы)).
    	факт_ниже(дама(оля, петровы), кавалер(сережа, петровы)).
    	факт_ниже(кавалер(дима, крымовы), дама(оля, петровы)).
    	факт_ниже(дама(инна, крымовы), кавалер(дима, крымовы)).
    	факт_ниже(дама(аня, воробьевы), дама(инна, крымовы)).
    
  	ниже(Ниже, Выше):-
    		факт_ниже(Ниже, Выше);
    		факт_ниже(Середина, Выше), 
    		ниже(Ниже, Середина).
    
  	есть_дама_выше_кавалера(Гипотеза):-
    		входит_в(пара(дама(ИмяДамы, ФамилияДамы), кавалер(ИмяКавалера, ФамилияКавалера)), 
      			Гипотеза), 
    		ниже(кавалер(ИмяКавалера, ФамилияКавалера), дама(ИмяДамы, ФамилияДамы)).
    
    
 	проверка_гипотезы(Гипотеза):-
%в каждой паре кавалер выше дамы
   	NOT(есть_дама_выше_кавалера(Гипотеза)).
GOAL
  	генерация_гипотезы(Гипотеза),
  	проверка_гипотезы(Гипотеза).