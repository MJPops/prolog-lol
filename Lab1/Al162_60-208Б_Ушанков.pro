/*								Каток
Четыре подруги пришли на каток, каждая со своим братом. Они разбились на пары и 
начали кататься. Оказалось, что в каждой паре юноша выше дамы и никто 
не катается со своей сестрой. Самый высокий из компании - Юра Воробьев, следующий
по росту Андрей Егоров, потом Люся Егорова, Сережа Петров, Оля Петрова, Дима Крымов
Инна Краымова и Аня Воробьева. Кто с кем катался?	*/

DOMAINS
  	фамилия = symbol
  	имя_дамы = symbol
  	имя_юноши = symbol

% Разделены для распознования пола, таким образом отдельная проверка пола
% не потребуется
  	структура_девушки = девушка(имя_дамы, фамилия)
  	структура_юноши = юноша(имя_юноши, фамилия)
  
% Прикладной объект
  	человек = девушка(имя_дамы, фамилия); юноша(имя_юноши, фамилия)
  
  	структура_гипотезы = пара(структура_девушки, структура_юноши)
  
  	гипотеза = структура_гипотезы*
  	фамилии = фамилия*
  	дамы = структура_девушки*
  	юноши = структура_юноши*
CONSTANTS
  	все_дамы = [девушка(люся, егоровы), девушка(оля, петровы), девушка(инна, крымовы), девушка(аня, воробьевы) ]
  	все_юноши = [юноша(юра, воробьевы), юноша(андрей, егоровы), юноша(сережа, петровы), юноша(дима, крымовы)]
PREDICATES
  	nondeterm входит_в(структура_гипотезы, гипотеза)
  	nondeterm входит_в(фамилия, фамилии)
  	nondeterm входит_в(структура_девушки, дамы)
  	nondeterm входит_в(структура_юноши, юноши)
  
  	nondeterm без_повторов(фамилии)
  	nondeterm без_повторов(дамы) 
  	nondeterm без_повторов(юноши)
  
  	nondeterm генерация_гипотезы(гипотеза)
  	nondeterm факт_ниже(человек, человек)
  	nondeterm ниже(человек, человек)
  	nondeterm есть_девушка_выше_юноша(гипотеза)
  
  	nondeterm проверка_гипотезы(гипотеза)
CLAUSES
    входит_в(ПервыйЭлемент, [ПервыйЭлемент|_ОстальныеЭлементы]). 
    входит_в(ПервыйЭлемент, [_ПервыйЭлемент|ОстальныеЭлементы]):- 
       	входит_в(ПервыйЭлемент, ОстальныеЭлементы).
       
/*
 Нашел похожую вот тут:
 https://ru.stackoverflow.com/questions/651380/
%D0%9F%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B8%D1%82%D1%8C-%D1%81%D0%BF%
D0%B8%D1%81%D0%BE%D0%BA-%D0%BE%D0%B1%D1%8A%D0%B5%D0%B4%D0%B8%D0%BD%D
1%8F%D1%8E%D1%89%D0%B8%D0%B9-%D0%B4%D0%B2%D0%B0-%D1%81%D0%BF%D0%B8%D
1%81%D0%BA%D0%B0-%D0%B1%D0%B5%D0%B7-%D0%BF%D0%BE%D0%B2%D1%82%D0%BE%D
1%80%D0%B5%D0%BD%D0%B8%D0%B9
*/	
    без_повторов([]).
    	без_повторов([Первый|Остальные]):-
      		NOT(входит_в(Первый, Остальные)),
      		без_повторов(Остальные).

% Генерация гипотезы
    	генерация_гипотезы(Гипотеза):-
      		входит_в(ПараПетровой, все_юноши), 
      		входит_в(ПараКрымовой, все_юноши), 
      		входит_в(ПараВоробьевой, все_юноши), 
      		входит_в(ПараЕгоровой, все_юноши), 
      
      	без_повторов([ПараПетровой, ПараКрымовой, ПараВоробьевой, ПараЕгоровой]),
      
% Никто не катается со своей сестрой. 
      	NOT(ПараПетровой = юноша(_, петровы)),
      	NOT(ПараКрымовой = юноша(_, крымовы)),
      	NOT(ПараВоробьевой = юноша(_, воробьевы)),
      	NOT(ПараЕгоровой = юноша(_, егоровы)),
      
      	Гипотеза = 
      	[
		% Все возможные пары для каждой дамы
        	пара(девушка(оля, петровы),  ПараПетровой),
        	пара(девушка(инна, крымовы),  ПараКрымовой),
        	пара(девушка(аня, воробьевы),  ПараВоробьевой),
        	пара(девушка(люся, егоровы),  ПараЕгоровой)
       	].
    
% Порядок по росту из условия задачи
    факт_ниже(юноша(андрей, егоровы), юноша(юра, воробьевы)).
    факт_ниже(девушка(люся, егоровы), юноша(андрей, егоровы)).
    факт_ниже(юноша(сережа, петровы), девушка(люся, егоровы)).
    факт_ниже(девушка(оля, петровы), юноша(сережа, петровы)).
    факт_ниже(юноша(дима, крымовы), девушка(оля, петровы)).
    факт_ниже(девушка(инна, крымовы), юноша(дима, крымовы)).
    факт_ниже(девушка(аня, воробьевы), девушка(инна, крымовы)).
    
% Сравение по росту при помощи рекурсии
% Также это можно реализовать серией сравнений через "ИЛИ",
% но это слишком громоздко
  	ниже(Ниже, Выше):-
    	факт_ниже(Ниже, Выше);
    	факт_ниже(Середина, Выше), 
    	ниже(Ниже, Середина).
    
% Возвращает true, если в списке пар есть пара, где девушка выше юноши
  	есть_девушка_выше_юноша(Гипотеза):-
    	входит_в(пара(девушка(ИмяДамы, ФамилияДамы), юноша(Имяюноша, Фамилияюноша)), 
      		Гипотеза), 
    	ниже(юноша(Имяюноша, Фамилияюноша), девушка(ИмяДамы, ФамилияДамы)).
    
    
% Проверка гипотезы
 	проверка_гипотезы(Гипотеза):-
   		NOT(есть_девушка_выше_юноша(Гипотеза)).
GOAL
  	генерация_гипотезы(Гипотеза),
  	проверка_гипотезы(Гипотеза).